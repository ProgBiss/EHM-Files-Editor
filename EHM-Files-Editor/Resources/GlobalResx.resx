<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Austria" xml:space="preserve">
    <value>Autriche</value>
  </data>
  <data name="Belarus" xml:space="preserve">
    <value>Biélorussie</value>
  </data>
  <data name="Canada" xml:space="preserve">
    <value>Canada</value>
  </data>
  <data name="Czech" xml:space="preserve">
    <value>République Tchèque</value>
  </data>
  <data name="Finland" xml:space="preserve">
    <value>Finlande</value>
  </data>
  <data name="France" xml:space="preserve">
    <value>France</value>
  </data>
  <data name="Germany" xml:space="preserve">
    <value>Allemagne</value>
  </data>
  <data name="Italia" xml:space="preserve">
    <value>Italie</value>
  </data>
  <data name="Japan" xml:space="preserve">
    <value>Japon</value>
  </data>
  <data name="Latvia" xml:space="preserve">
    <value>Lettonie</value>
  </data>
  <data name="Norway" xml:space="preserve">
    <value>Norvège</value>
  </data>
  <data name="Others" xml:space="preserve">
    <value>Autres</value>
  </data>
  <data name="Polonia" xml:space="preserve">
    <value>Pologne</value>
  </data>
  <data name="Russia" xml:space="preserve">
    <value>Russie</value>
  </data>
  <data name="Slovakia" xml:space="preserve">
    <value>Slovaquie</value>
  </data>
  <data name="Slovenia" xml:space="preserve">
    <value>Slovénie</value>
  </data>
  <data name="Sweden" xml:space="preserve">
    <value>Suède</value>
  </data>
  <data name="Switzerland" xml:space="preserve">
    <value>Suisse</value>
  </data>
  <data name="Ukraine" xml:space="preserve">
    <value>Ukraine</value>
  </data>
  <data name="USA" xml:space="preserve">
    <value>États-Unis</value>
  </data>
  <data name="AHL" xml:space="preserve">
    <value>AHL</value>
  </data>
  <data name="AllAroundForwardDefDef" xml:space="preserve">
    <value>Joueur offensivement balancé / Défenseur défensif</value>
  </data>
  <data name="Center" xml:space="preserve">
    <value>Centre</value>
  </data>
  <data name="CharacterPlayer" xml:space="preserve">
    <value>Joueur de caractère</value>
  </data>
  <data name="Defenceman" xml:space="preserve">
    <value>Défenseur</value>
  </data>
  <data name="Goalie" xml:space="preserve">
    <value>Gardien</value>
  </data>
  <data name="Goon" xml:space="preserve">
    <value>Bagarreur</value>
  </data>
  <data name="JNR" xml:space="preserve">
    <value>JNR</value>
  </data>
  <data name="LeftHanded" xml:space="preserve">
    <value>Gaucher</value>
  </data>
  <data name="LeftWing" xml:space="preserve">
    <value>Ailier gauche</value>
  </data>
  <data name="NHL" xml:space="preserve">
    <value>NHL</value>
  </data>
  <data name="OffDefAllAroundForward" xml:space="preserve">
    <value>Défenseur offensif / Joueur offensivement balancé</value>
  </data>
  <data name="PhysDefAllAroundForward" xml:space="preserve">
    <value>Défenseur physique / Joueur offensivement balancé</value>
  </data>
  <data name="PlaymakerDefDef" xml:space="preserve">
    <value>Passeur / Défenseur défensif</value>
  </data>
  <data name="PositioningDefSmartAllAroundForward" xml:space="preserve">
    <value>Positionnement et intelligence défensive / Joueur offensivement balancé</value>
  </data>
  <data name="PowerForwardDefDef" xml:space="preserve">
    <value>Attaquant de puissance / Défenseur défensif</value>
  </data>
  <data name="RightHanded" xml:space="preserve">
    <value>Droitier</value>
  </data>
  <data name="RightWing" xml:space="preserve">
    <value>Ailier droit</value>
  </data>
  <data name="SniperDefDef" xml:space="preserve">
    <value>Buteur / Défenseur défensif</value>
  </data>
  <data name="TwoWayForwardDefDef" xml:space="preserve">
    <value>Attaquant polyvalent / Défenseur défensif</value>
  </data>
  <data name="BluechipProspect" xml:space="preserve">
    <value>Excellent espoir</value>
  </data>
  <data name="CorePlayer" xml:space="preserve">
    <value>Joueur important</value>
  </data>
  <data name="Defense" xml:space="preserve">
    <value>Défense</value>
  </data>
  <data name="FranchisePlayer" xml:space="preserve">
    <value>Joueur de franchise</value>
  </data>
  <data name="FutureRegular" xml:space="preserve">
    <value>Espoir normal</value>
  </data>
  <data name="LongShot" xml:space="preserve">
    <value>Long terme</value>
  </data>
  <data name="MinorLeaguer" xml:space="preserve">
    <value>Joueur AHL</value>
  </data>
  <data name="Offense" xml:space="preserve">
    <value>Attaque</value>
  </data>
  <data name="Physical" xml:space="preserve">
    <value>Physique</value>
  </data>
  <data name="RegularPlayer" xml:space="preserve">
    <value>Joueur régulier</value>
  </data>
  <data name="Rest" xml:space="preserve">
    <value>Repos</value>
  </data>
  <data name="TradeBait" xml:space="preserve">
    <value>Appât de transaction</value>
  </data>
  <data name="AlbanyDevils" xml:space="preserve">
    <value>Devils d'Albany</value>
  </data>
  <data name="AnaheimDucks" xml:space="preserve">
    <value>Ducks d'Anaheim</value>
  </data>
  <data name="ArizonaCoyotes" xml:space="preserve">
    <value>Coyotes de l'Arizona</value>
  </data>
  <data name="BakersfieldCondors" xml:space="preserve">
    <value>Condors de Bakersfield</value>
  </data>
  <data name="BinghamtonSenators" xml:space="preserve">
    <value>Senators de Binghamton</value>
  </data>
  <data name="BostonBruins" xml:space="preserve">
    <value>Bruins de Boston</value>
  </data>
  <data name="BridgeportSoundtigers" xml:space="preserve">
    <value>Soundtigers de Bridgeport</value>
  </data>
  <data name="BuffaloSabres" xml:space="preserve">
    <value>Sabres de Buffalo</value>
  </data>
  <data name="CalgaryFlames" xml:space="preserve">
    <value>Flames de Calgary</value>
  </data>
  <data name="CarolinaHurricanes" xml:space="preserve">
    <value>Hurricanes de la Caroline</value>
  </data>
  <data name="CharlotteCheckers" xml:space="preserve">
    <value>Checkers de Charlotte</value>
  </data>
  <data name="ChicagoBlackHawks" xml:space="preserve">
    <value>BlackHawks de Chicago</value>
  </data>
  <data name="ChicagoWolves" xml:space="preserve">
    <value>Wolves de Chicago</value>
  </data>
  <data name="ClevelandMonsters" xml:space="preserve">
    <value>Monsters de Cleveland</value>
  </data>
  <data name="ColoradoAvalanche" xml:space="preserve">
    <value>Avalanche du Colorado</value>
  </data>
  <data name="ColumbusBlueJackets" xml:space="preserve">
    <value>Blue Jackets de Columbus</value>
  </data>
  <data name="DallasStars" xml:space="preserve">
    <value>Stars de Dallas</value>
  </data>
  <data name="DetroitRedWings" xml:space="preserve">
    <value>Red Wings de Détroit</value>
  </data>
  <data name="EdmontonOilers" xml:space="preserve">
    <value>Oilers d'Edmonton</value>
  </data>
  <data name="FiveFootEight" xml:space="preserve">
    <value>5p8</value>
  </data>
  <data name="FiveFootEleven" xml:space="preserve">
    <value>5p11</value>
  </data>
  <data name="FiveFootFive" xml:space="preserve">
    <value>5p5</value>
  </data>
  <data name="FiveFootNine" xml:space="preserve">
    <value>5p9</value>
  </data>
  <data name="FiveFootSeven" xml:space="preserve">
    <value>5p7</value>
  </data>
  <data name="FiveFootSix" xml:space="preserve">
    <value>5p6</value>
  </data>
  <data name="FiveFootTen" xml:space="preserve">
    <value>5p10</value>
  </data>
  <data name="FloridaPanthers" xml:space="preserve">
    <value>Panthers de la Floride</value>
  </data>
  <data name="GrandRapidGriffins" xml:space="preserve">
    <value>Griffins de Grand Rapid</value>
  </data>
  <data name="HartfordWolfpacks" xml:space="preserve">
    <value>Wolfpacks d'Hartford</value>
  </data>
  <data name="HersheyBears" xml:space="preserve">
    <value>Bears d'Hershey</value>
  </data>
  <data name="IowaWild" xml:space="preserve">
    <value>Wild d'Iowa</value>
  </data>
  <data name="LehighValleyPhantoms" xml:space="preserve">
    <value>Phantoms de Lehigh Valley</value>
  </data>
  <data name="LosAngelesKings" xml:space="preserve">
    <value>Kings de Los Angeles</value>
  </data>
  <data name="ManitobaMoose" xml:space="preserve">
    <value>Moose du Manitoba</value>
  </data>
  <data name="MilwaukeeAdmirals" xml:space="preserve">
    <value>Admirals de Milwaukee</value>
  </data>
  <data name="MinnesotaWild" xml:space="preserve">
    <value>Wild du Minnesota</value>
  </data>
  <data name="MontrealCanadiens" xml:space="preserve">
    <value>Canadiens de Montréal</value>
  </data>
  <data name="NashvillePredators" xml:space="preserve">
    <value>Prédateurs de Nashville</value>
  </data>
  <data name="NewJerseyDevils" xml:space="preserve">
    <value>Devils du New Jersey</value>
  </data>
  <data name="NewYorkIslanders" xml:space="preserve">
    <value>Islanders de New York</value>
  </data>
  <data name="NewYorkRangers" xml:space="preserve">
    <value>Rangers de New York</value>
  </data>
  <data name="OntarioReign" xml:space="preserve">
    <value>Reign d'Ontario</value>
  </data>
  <data name="OttawaSenators" xml:space="preserve">
    <value>Sénateurs d'Ottawa</value>
  </data>
  <data name="PhiladelphiaFlyers" xml:space="preserve">
    <value>Flyers de Philadelphie</value>
  </data>
  <data name="PittsburghPenguins" xml:space="preserve">
    <value>Penguins de Pittsburgh</value>
  </data>
  <data name="ProvidenceBruins" xml:space="preserve">
    <value>Bruins de Providence</value>
  </data>
  <data name="RochesterAmericans" xml:space="preserve">
    <value>Americans de Rochester</value>
  </data>
  <data name="RockfordIcehogs" xml:space="preserve">
    <value>Icehogs de Rockford</value>
  </data>
  <data name="SanAntonioRampage" xml:space="preserve">
    <value>Rampage de San Antonio</value>
  </data>
  <data name="SanDiegoGulls" xml:space="preserve">
    <value>Gulls de San Diego</value>
  </data>
  <data name="SanJoseBarracuda" xml:space="preserve">
    <value>Barracuda de San Jose</value>
  </data>
  <data name="SanJoseSharks" xml:space="preserve">
    <value>Sharks de San Jose</value>
  </data>
  <data name="SixFoot" xml:space="preserve">
    <value>6p</value>
  </data>
  <data name="SixFootEight" xml:space="preserve">
    <value>6p8</value>
  </data>
  <data name="SixFootFive" xml:space="preserve">
    <value>6p5</value>
  </data>
  <data name="SixFootFour" xml:space="preserve">
    <value>6p4</value>
  </data>
  <data name="SixFootNine" xml:space="preserve">
    <value>6p9</value>
  </data>
  <data name="SixFootOne" xml:space="preserve">
    <value>6p1</value>
  </data>
  <data name="SixFootSeven" xml:space="preserve">
    <value>6p7</value>
  </data>
  <data name="SixFootSix" xml:space="preserve">
    <value>6p6</value>
  </data>
  <data name="SixFootTen" xml:space="preserve">
    <value>6p10</value>
  </data>
  <data name="SixFootThree" xml:space="preserve">
    <value>6p3</value>
  </data>
  <data name="SixFootTwo" xml:space="preserve">
    <value>6p2</value>
  </data>
  <data name="SpringfieldThunderbirds" xml:space="preserve">
    <value>Thunderbirds de Springfiled</value>
  </data>
  <data name="StJohnsIcecaps" xml:space="preserve">
    <value>Icecaps de St-Johns</value>
  </data>
  <data name="StLouisBlues" xml:space="preserve">
    <value>Blues de St-Louis</value>
  </data>
  <data name="StocktonHeat" xml:space="preserve">
    <value>Heat de Stockton</value>
  </data>
  <data name="SyracuseCrunch" xml:space="preserve">
    <value>Crunch de Syracuse</value>
  </data>
  <data name="TampaBayLightning" xml:space="preserve">
    <value>Lightning de Tampa Bay</value>
  </data>
  <data name="TexasStars" xml:space="preserve">
    <value>Stars du Texas</value>
  </data>
  <data name="TorontoMapleLeafs" xml:space="preserve">
    <value>Maple Leafs de Toronto</value>
  </data>
  <data name="TorontoMarlies" xml:space="preserve">
    <value>Marlies de Toronto</value>
  </data>
  <data name="TucsonRoadrunners" xml:space="preserve">
    <value>Roadrunners de Tucson</value>
  </data>
  <data name="UticaComets" xml:space="preserve">
    <value>Comets d'Utica</value>
  </data>
  <data name="VancouverCanucks" xml:space="preserve">
    <value>Canucks de Vancouver</value>
  </data>
  <data name="WashingtonCapitals" xml:space="preserve">
    <value>Capitals de Washington</value>
  </data>
  <data name="WilkesBarreScrantonPenguins" xml:space="preserve">
    <value>Penguins de Wilkes-Barre/Scranton</value>
  </data>
  <data name="WinnipegJets" xml:space="preserve">
    <value>Jets de Winnipeg</value>
  </data>
</root>